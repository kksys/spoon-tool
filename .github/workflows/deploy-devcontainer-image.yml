name: Deploy devcontainer image

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/deploy-devcontainer-image.yml"
      - "packages/devcontainer/**"
  workflow_dispatch:
    inputs:

env:
  REGISTRY: ghcr.io
  SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  GHCR_PASSWORD: ${{ secrets.GHCR_CONTAINER_REGISTRY_PASSWORD }}

jobs:
  build-and-deploy-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Get message of head commit
        id: get_head_commit_message
        run: echo "message=$(git log --format=%B -n 1 HEAD | head -n 1)" >> $GITHUB_OUTPUT

      - name: Pre notification to Slack
        id: pre_slack
        uses: slackapi/slack-github-action@485a9d42d3a73031f12ec201c457e2162c45d02d # v2.0.0
        with:
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          method: chat.postMessage
          payload-templated: true
          payload: |
            channel: "${{ secrets.SLACK_CHANNEL_ID }}"
            text: ":loading: Generating new devcontainer image..."
            blocks: [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": ":loading: Generating new devcontainer image..."
                }
              },
              {
                "type": "context",
                "elements": [
                  {
                    "type": "mrkdwn",
                    "text": "based commit: <https://github.com/${{ github.actor }}/${{ github.repository }}/commit/${{ github.sha }}|${{ steps.get_head_commit_message.outputs.message }}>"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "Author: <https://github.com/${{ github.event.sender.login }}|@${{ github.event.sender.login }}>"
                  }
                ]
              }
            ]

      - name: Get metadata for image
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=sha

      - name: Convert metadata to pass devcontainers/ci
        id: format
        # https://github.com/devcontainers/ci/issues/235
        run: |
          prefix="${{ env.REGISTRY }}/${{ github.repository }}:"

          tags=$(echo "${{ steps.meta.outputs.tags }}" | sed -e "s#${prefix}##g")
          tags=$(echo "${tags}" | tr "\n" ",")
          tags=$(echo "${tags}" | sed "s/,*$//")

          echo "tags=${tags}" >> $GITHUB_OUTPUT

      - name: Setup QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3

      - name: Log in to the Container registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build devcontainer image
        uses: devcontainers/ci@a56d055efecd725e8cfe370543b6071b79989cc8 # v0.3
        with:
          subFolder: packages/devcontainer
          imageName: ${{ env.REGISTRY }}/${{ github.repository }}
          imageTag: ${{ steps.format.outputs.tags }}
          platform: linux/amd64,linux/arm64
          push: always
          cacheFrom: |
            ${{ env.REGISTRY }}/${{ github.repository }}
            ${{ env.REGISTRY }}/${{ github.repository }}:main

      - name: Delete images except latest
        continue-on-error: true
        uses: kksys/ghcr-delete-image@58870e0c36836b2ce045f292e9e99ca0d9fd2e33 # v0.0.4
        with:
          user: ${{ github.actor }}
          name: ${{ github.repository }}/devcontainer
          token: ${{ env.GHCR_PASSWORD }}
          untagged-keep-latest: 3

      - name: Post notification to slack with Succeed
        if: success()
        uses: slackapi/slack-github-action@485a9d42d3a73031f12ec201c457e2162c45d02d # v2.0.0
        with:
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          method: chat.update
          payload-templated: true
          payload: |
            channel: ${{ secrets.SLACK_CHANNEL_ID }}
            ts: "${{ steps.pre_slack.outputs.ts }}"
            text: ":white_check_mark: Generated new devcontainer image..."
            blocks: [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": ":white_check_mark: Generated new devcontainer image..."
                }
              },
              {
                "type": "context",
                "elements": [
                  {
                    "type": "mrkdwn",
                    "text": "based commit: <https://github.com/${{ github.actor }}/${{ github.repository }}/commit/${{ github.sha }}|${{ steps.get_head_commit_message.outputs.message }}>"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "Author: <https://github.com/${{ github.event.sender.login }}|@${{ github.event.sender.login }}>"
                  }
                ]
              }
            ]

      - name: Post notification to slack with Failure
        if: failure()
        uses: slackapi/slack-github-action@485a9d42d3a73031f12ec201c457e2162c45d02d # v2.0.0
        with:
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          method: chat.update
          payload-templated: true
          payload: |
            channel: ${{ secrets.SLACK_CHANNEL_ID }}
            ts: "${{ steps.pre_slack.outputs.ts }}"
            text: ":x: Error generating new devcontainer image..."
            blocks: [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": ":x: Error generating new devcontainer image...\r\nPlease refer to action log."
                }
              },
              {
                "type": "context",
                "elements": [
                  {
                    "type": "mrkdwn",
                    "text": "based commit: <https://github.com/${{ github.actor }}/${{ github.repository }}/commit/${{ github.sha }}|${{ steps.get_head_commit_message.outputs.message }}>"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "Author: <https://github.com/${{ github.event.sender.login }}|@${{ github.event.sender.login }}>"
                  }
                ]
              }
            ]
