name: Publish Cloudflare Pages

on:
  release:
    types:
      - released

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to action
permissions:
  contents: read
  deployments: write
  statuses: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  DIST_DIRECTORY: packages/frontend/dist
  FRONTEND_DIRECTORY: packages/frontend
  PACKAGE_NAME: spoon-tool-client
  ARCHIVE_NAME: spoon-tool-client.zip
  CLOUDFLARE_ENVIRONMENT: production
  CLOUDFLARE_PROJECT_NAME: spoon-tool-client

jobs:
  # Build job
  build:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup node & pnpm version
        uses: ./.github/actions/setup-node-pnpm

      - name: Install Dependencies
        run: pnpm i

      - name: Build
        run: pnpm -C ${{ env.FRONTEND_DIRECTORY }} build
        env:
          VITE_BACKEND_HOST: ${{ secrets.VITE_BACKEND_HOST }}

      - name: Install zip
        uses: montudor/action-zip@a8e75c9faefcd80fac3baf53ef40b9b119d5b702 # v1

      - name: Zip output
        run: |
          pushd $(pwd)
          cd ${{ env.DIST_DIRECTORY }}
          zip -qq -r ${{ env.ARCHIVE_NAME }} .
          popd
          mv ${{ env.DIST_DIRECTORY }}/${{ env.ARCHIVE_NAME }} ${{ env.FRONTEND_DIRECTORY }}/${{ env.ARCHIVE_NAME }}

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: ${{ env.PACKAGE_NAME }}
          path: ${{ env.FRONTEND_DIRECTORY }}/${{ env.ARCHIVE_NAME }}

      - name: Upload artifact to release
        env:
          GH_TOKEN: ${{ secrets.SPOON_TOOL_GH_TOKEN }}
        run: |
          TAG_NAME="${GITHUB_REF#refs/*/}"
          gh release upload "$TAG_NAME" \
            "${{ env.FRONTEND_DIRECTORY }}/${{ env.ARCHIVE_NAME }}#${{ env.ARCHIVE_NAME }}" \
            --clobber

  # Deployment job
  deploy:
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4
        with:
          name: ${{ env.PACKAGE_NAME }}
          path: ${{ env.FRONTEND_DIRECTORY }}

      - name: Extract Zip package
        run: |
          mkdir -p ${{ env.DIST_DIRECTORY }}
          unzip -qq ${{ env.FRONTEND_DIRECTORY }}/${{ env.ARCHIVE_NAME }} -d ${{ env.DIST_DIRECTORY }}

      - name: Publish to Cloudflare Pages
        id: cloudflare_pages_deploy
        uses: cloudflare/pages-action@f0a1cd58cd66095dee69bfa18fa5efd1dde93bca # 1
        with:
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          projectName: ${{ env.CLOUDFLARE_PROJECT_NAME }}
          directory: ${{ env.DIST_DIRECTORY }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Add publish URL as commit status
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        with:
          script: |
            const sha = context.payload.pull_request?.head.sha ?? context.sha;
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              context: 'Cloudflare Pages',
              description: 'Cloudflare Pages deployment',
              state: 'success',
              sha,
              target_url: "${{ steps.cloudflare_pages_deploy.outputs.url }}",
            });
