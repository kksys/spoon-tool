name: Pull Request for Backend

on:
  pull_request:
    types:
      - opened
      - synchronize

env:
  BACKEND_DIRECTORY: packages/backend

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set node version
        run: |
          node_version=$(cat package.json | jq -r .engines.node)
          echo "NODE_VERSION=${node_version}" >> $GITHUB_ENV
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Set pnpm version
        shell: bash
        run: |
          pnpm_version=$(cat package.json | jq -r .engines.pnpm)
          echo "PNPM_VERSION=${pnpm_version}" >> $GITHUB_ENV
      - uses: pnpm/action-setup@v4.0.0
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Cache node modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies
        run: |
          pnpm i --frozen-lockfile

      - name: Lint Check
        run: pnpm -C ${{ env.BACKEND_DIRECTORY }} exec run-p "circular" "lint"

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set node version
        run: |
          node_version=$(cat package.json | jq -r .engines.node)
          echo "NODE_VERSION=${node_version}" >> $GITHUB_ENV
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Set pnpm version
        shell: bash
        run: |
          pnpm_version=$(cat package.json | jq -r .engines.pnpm)
          echo "PNPM_VERSION=${pnpm_version}" >> $GITHUB_ENV
      - uses: pnpm/action-setup@v4.0.0
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Cache node modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies
        run: |
          pnpm i --frozen-lockfile

      - name: Run Unit Test
        run: pnpm -C ${{ env.BACKEND_DIRECTORY }} test
