name: Pull Request for Frontend

on:
  pull_request:
    types:
      - opened
      - synchronize

env:
  FRONTEND_DIRECTORY: packages/frontend

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set node & pnpm version
        run: |
          node_version=$(cat package.json | jq -r .engines.node)
          pnpm_version=$(cat package.json | jq -r .engines.pnpm)
          echo "NODE_VERSION=${node_version}" >> $GITHUB_ENV
          echo "PNPM_VERSION=${pnpm_version}" >> $GITHUB_ENV

      - uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
        with:
          version: ${{ env.PNPM_VERSION }}

      - uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Install Dependencies
        run: |
          pnpm i --frozen-lockfile

      - name: Lint Check
        run: |
          # create auto-generated files before linting because linter requires them to check
          pnpm -C ${{ env.FRONTEND_DIRECTORY }} exec run-p gen-app-info license
          pnpm -C ${{ env.FRONTEND_DIRECTORY }} exec run-p "circular" "lint"

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set node & pnpm version
        run: |
          node_version=$(cat package.json | jq -r .engines.node)
          pnpm_version=$(cat package.json | jq -r .engines.pnpm)
          echo "NODE_VERSION=${node_version}" >> $GITHUB_ENV
          echo "PNPM_VERSION=${pnpm_version}" >> $GITHUB_ENV

      - uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
        with:
          version: ${{ env.PNPM_VERSION }}

      - uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Install Dependencies
        run: |
          pnpm i --frozen-lockfile

      - name: Build
        run: pnpm -C ${{ env.FRONTEND_DIRECTORY }} build

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set node & pnpm version
        run: |
          node_version=$(cat package.json | jq -r .engines.node)
          pnpm_version=$(cat package.json | jq -r .engines.pnpm)
          echo "NODE_VERSION=${node_version}" >> $GITHUB_ENV
          echo "PNPM_VERSION=${pnpm_version}" >> $GITHUB_ENV

      - uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
        with:
          version: ${{ env.PNPM_VERSION }}

      - uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Install Dependencies
        run: |
          pnpm i --frozen-lockfile

      - name: Run Unit Test
        run: pnpm -C ${{ env.FRONTEND_DIRECTORY }} test
