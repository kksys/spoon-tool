#!/usr/bin/env python3

from json import dump, load
from subprocess import PIPE, run
from re import match

def load_package_json() -> dict[str, dict]:
  result = {
    'root': None,
    'frontend': None
  }

  with open('./package.json', mode='rt', encoding='utf-8') as f:
    result['root'] = load(f)
  with open('./packages/frontend/package.json', mode='rt', encoding='utf-8') as f:
    result['frontend'] = load(f)

  return result

def get_author(package_json: dict[str, dict]) -> str:
  return package_json['author']

def get_repository_url(package_json: dict[str, dict]) -> str:
  return package_json['repository']['url']

def get_app_name(package_json: dict[str, dict]) -> str:
  return package_json['name']

def get_app_version(package_json: dict[str, dict]) -> str:
  return package_json['version']

def get_revision() -> str:
  proc = run('git rev-parse HEAD', shell=True, stdout=PIPE, stderr=PIPE, text=True)
  result = match('[0-9a-f]{40}', proc.stdout)
  return result.group()

def main():
  package_json = load_package_json()

  app_info = {
    'appName': get_app_name(package_json['frontend']),
    'version': get_app_version(package_json['frontend']),
    'revision': get_revision(),
    'author': get_author(package_json['root']),
    'repositoryUrl': get_repository_url(package_json['root'])
  }

  with open('./packages/frontend/src/assets/autogen/app-info.json', mode='wt', encoding='utf-8') as f:
    dump(app_info, f)

if __name__ == '__main__':
  main()
